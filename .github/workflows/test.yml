name: Test
on:
  pull_request:
jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        distro: [alpine, debian, fedora, opensuse, rocky, ubuntu]
        method: [auto, brew, manual, portable, snap]
        shell: [ash, bash, dash, ksh, zsh]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        env:
          DISTRO: ${{ matrix.distro }}
          METHOD: ${{ matrix.method }}
          SH: ${{ matrix.shell }}
        run: |
          cd tests/linux
          ./test.sh
  macos:
    name: MacOS
    runs-on: macos-latest
    strategy:
      fail-fast: true
      matrix:
        method: [auto, brew, portable]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install cosign
        run: brew install cosign
      - name: Test
        run: |
          cd tests/macos
          ./${{ matrix.method }}.sh
  widows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
        method: [auto, winget, portable]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install cosign
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir bin
          $headers = @{}
          if ($Env:GITHUB_TOKEN) {
            $headers["authorization"] = "token ${Env:GITHUB_TOKEN}"
          }
          $releaseData = Invoke-WebRequest -uri "https://api.github.com/repos/sigstore/cosign/releases/latest" -headers $headers | ConvertFrom-Json
          if (!$releaseData.name)
          {
              throw "Failed to download release information from GitHub, no 'name' field in response."
          }
          $cosignVersion = $releaseData.name.Substring(1)
          (New-Object System.Net.WebClient).DownloadFile("https://github.com/sigstore/cosign/releases/download/v${cosignVersion}/cosign-windows-amd64.exe", "bin\cosign.exe")
          echo "$((Get-Item .).FullName)\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Test
        working-directory: tests\windows
        run: .\test.ps1 -method "${{ matrix.method }}"